{"name":"Groundskeeper.gem","tagline":"A simple multi-tenancy middleware with options","body":"  - [![Version](https://badge.fury.io/rb/groundskeeper.png)](https://rubygems.org/gems/groundskeeper)\r\n  - [![Climate](https://codeclimate.com/github/krainboltgreene/groundskeeper.png)](https://codeclimate.com/github/krainboltgreene/groundskeeper)\r\n  - [![Build](http://img.shields.io/travis-ci/krainboltgreene/groundskeeper.png)](https://travis-ci.org/krainboltgreene/groundskeeper)\r\n  - [![Dependencies](https://gemnasium.com/krainboltgreene/groundskeeper.png)](https://gemnasium.com/krainboltgreene/groundskeeper)\r\n  - [![Gittip](http://img.shields.io/gittip/krainboltgreene.png)](https://www.gittip.com/krainboltgreene/)\r\n  - [![License](http://img.shields.io/license/MIT.png?color=green)](http://opensource.org/licenses/MIT)\r\n\r\nThis gem helps you parse various parts of a request and determine the owner\r\nof the request in a multi-tenant environment.\r\n\r\n\r\nUsing\r\n=====\r\n\r\nSimply add the middleware to your stack with the options required as explained below:\r\n\r\n**Example: Rails**\r\n\r\n``` ruby\r\n# config/application.rb\r\n\r\n#...\r\n\r\nmodule Testapp\r\n  class Application < Rails::Application\r\n\r\n\r\n    # ...\r\n\r\n    config.middleware.use(Groundskeeper::Middleware::Subdomain, model: \"Company\")\r\n  end\r\nend\r\n```\r\n\r\nNow during any request the 3rd-level subdomain (`www` in `www.example.com`) will be used to find the company.\r\n\r\nThe exect query is as follows:\r\n\r\n``` ruby\r\nmodel.find_by_slug(slug)\r\n```\r\n\r\nTo change the query lookup simply provide Groundskeeper with the prefered query:\r\n\r\n\r\n``` ruby\r\n...use(Groundskeeper::Middleware::Subdomain, model: \"Company\", query: ->(model, name) {\r\n  model.where(name: name).first\r\n})\r\n```\r\n\r\nIf you want to look at the 2nd-level subdomain (`example` in `www.example.com`) just tell Groundskeeper to do that:\r\n\r\n``` ruby\r\n...use(Groundskeeper::Middleware::Subdomain, model: \"Company\", depth: 2)\r\n```\r\n\r\nThe number is related to the level, so `com` in `www.example.com` is the 1st or `1`.\r\n\r\nIf you're looking to be flexible in what subdomain you're looking for just tell Groundskeeper how:\r\n\r\n``` ruby\r\n...use(Groundskeeper::Middleware::Subdomain, model: \"Company\", parse: ->(host, depth) {\r\n  if fqdn.end_with?(\".awesome.com\")\r\n    fqdn.split(\".\")[depth]\r\n  else\r\n    fqdn.split(\".\")[-2]\r\n  end\r\n})\r\n```\r\n\r\nThis tells Groundskeeper to find the tenant's identifier based on the 3rd level subdomain if it ends in `.awesome.com` otherwise look at the 2nd level subdomain.\r\nThis is the formula for basing tenancy on subdomain or custom domain name.\r\n\r\n\r\n**NOTE**: Parameter and Header are currently not written.\r\n\r\nInstalling\r\n==========\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem \"groundskeeper\", \"~> 1.0\"\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself with:\r\n\r\n    $ gem install groundskeeper\r\n\r\n\r\nContributing\r\n============\r\n\r\n  1. Fork it\r\n  2. Create your feature branch (`git checkout -b my-new-feature`)\r\n  3. Commit your changes (`git commit -am 'Add some feature'`)\r\n  4. Push to the branch (`git push origin my-new-feature`)\r\n  5. Create new Pull Request\r\n\r\n\r\nLicensing\r\n=========\r\n\r\nCopyright (c) 2014 Kurtis Rainbolt-Greene\r\n\r\nMIT License\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}